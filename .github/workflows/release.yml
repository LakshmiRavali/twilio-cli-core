name: Cli-core Release
on:
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [10.x]
    steps:
      - uses: actions/checkout@v2
      - run: npm install
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm ci
      - run: npm test
  updateAPIDefinitions:
    runs-on: ubuntu-latest
    needs: [build]
    outputs:
      changeLog: ${{ steps.updateFolder.outputs.changeLog }}
    steps:
      - run: mkdir -p ~/oai_definitions/json
      - uses: actions/checkout@v2
        with:
          repository: 'twilio/twilio-oai'
          token:  ${{ secrets.OAI_TOKEN }}
      - run: |
          cp -R spec/json/. ~/oai_definitions/json/
          cp -R CHANGES.md ~/oai_definitions/CHANGES.md
      - uses: actions/checkout@v2
      - name: Update OAI folder
        id: updateFolder
        run: |
          npm install
          cp -R ~/oai_definitions/CHANGES.md OAI_CHANGES.md
          source scripts/update-api-spec-with-changelog.sh
          echo "::set-output name=changeLog::$changeLog"
  release:
    runs-on: ubuntu-latest
    needs: [updateAPIDefinitions]
    steps:
      - uses: actions/checkout@v2
      - run: git pull
      - run: npm install
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: semanticRelease
        run: npm install --save-dev @semantic-release/changelog @semantic-release/git
      - run: npm ci && npx semantic-release -t \${version}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  updateRelease:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [10.x]
    needs: [updateAPIDefinitions, release]
    steps:
      - uses: actions/checkout@v2
      - run: git fetch --tags
      - name: Getting latest tag
        id: getTag
        run: |
          echo "::set-output name=TAG_NAME::$(git describe --tags $(git rev-list --tags --max-count=1))"
      - run: echo "${{steps.getTag.outputs.TAG_NAME}}"
      - name: Update release
        uses: tubone24/update_release@v1.2.0
        env:
          GITHUB_TOKEN: ${{ github.token }}
          TAG_NAME: ${{steps.getTag.outputs.TAG_NAME}}
        with:
          is_append_body: true
          body: ${{needs.updateAPIDefinitions.outputs.changeLog}}
